plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "org.jetbrains.kotlin.android.extensions"
    id 'org.jetbrains.kotlin.kapt'
    id 'com.tencent.vasdolly'
//    id "kotlin-parcelize" //替代kotlin.android.extensions
}



android {
    compileSdk 33

    kapt {
        arguments {
            arg("AROUTER_MODULE_NAME", project.getName())
        }
    }

    defaultConfig {
        applicationId "com.wsy.ahp"
        minSdk 26
        targetSdk 33
        versionCode 102
        versionName "1.0.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //room导出json
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation": "$projectDir/schemas".toString()
                ]
            }
        }
    }

    signingConfigs {
        release {//发布版本的签名配置
            storeFile file('kyqzzd.keystore')
            keyAlias "kyqzzd.keystore"
            storePassword "nanputech"
            keyPassword "nanputech"
        }
//        debug {//调试版本的签名配置
//            storeFile file('kyqzzd.keystore')
//            keyAlias "kyqzzd.keystore"
//            storePassword "nanputech"
//            keyPassword "nanputech"
//        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    sourceSets {
        main {
            assets {
                srcDirs 'src\\main\\assets'
            }
        }
    }

    buildFeatures {
        compose = true
        viewBinding true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.3.2"
    }

    channel{
        //指定渠道文件
        channelFile = new File(project.rootDir, "channel.txt")
        //多渠道包的输出目录，默认为new File(project.buildDir,"channel")
        outputDir = new File(project.rootProject.buildDir,"channel")
        //多渠道包的命名规则，默认为：${appName}-${versionName}-${versionCode}-${flavorName}-${buildType}
        apkNameFormat ='${appName}-${versionName}-${versionCode}-${flavorName}-${buildType}'
        //快速模式：生成渠道包时不进行校验（速度可以提升10倍以上，默认为false）
        fastMode = false
        //buildTime的时间格式，默认格式：yyyyMMdd-HHmmss
        buildTimeDateFormat = 'yyyyMMdd-HH:mm:ss'
        //低内存模式（仅针对V2签名，默认为false）：只把签名块、中央目录和EOCD读取到内存，不把最大头的内容块读取到内存，在手机上合成APK时，可以使用该模式
        lowMemory = false

    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation project(path: ':wsy-ui')
    implementation project(path: ':wsy-library')
    implementation project(path: ':common')
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //----------------Glide图片加载--------------------
    implementation 'com.github.bumptech.glide:glide:4.10.0'

    //-------------------jetpack compose--------------------------
    implementation platform("androidx.compose:compose-bom:2022.12.00")
    implementation project(path: ':wsy-threed')
    androidTestImplementation platform("androidx.compose:compose-bom:2022.12.00")
    // Choose one of the following:
    // Material Design 3
    implementation("androidx.compose.material3:material3")
    // or Material Design 2
    implementation("androidx.compose.material:material")
    // or skip Material Design and build directly on top of foundational components
    implementation("androidx.compose.foundation:foundation")
    // or only import the main APIs for the underlying toolkit systems,
    // such as input and measurement/layout
    implementation("androidx.compose.ui:ui")

    // Android Studio Preview support
    implementation("androidx.compose.ui:ui-tooling-preview")
    debugImplementation("androidx.compose.ui:ui-tooling")

    // UI Tests
    androidTestImplementation("androidx.compose.ui:ui-test-junit4")
    debugImplementation("androidx.compose.ui:ui-test-manifest")

    // Optional - Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
    implementation("androidx.compose.material:material-icons-core")
    // Optional - Add full set of material icons
    implementation("androidx.compose.material:material-icons-extended")
    // Optional - Add window size utils
    implementation("androidx.compose.material3:material3-window-size-class")

    // Optional - Integration with activities
    implementation("androidx.activity:activity-compose:1.5.1")
    // Optional - Integration with ViewModels
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1")
    // Optional - Integration with LiveData
    implementation("androidx.compose.runtime:runtime-livedata")
    // Optional - Integration with RxJava
    implementation("androidx.compose.runtime:runtime-rxjava2")
    //percentlayout
    implementation 'androidx.percentlayout:percentlayout:1.0.0'

    implementation 'androidx.navigation:navigation-fragment:2.1.0'
    //-----------------------------------------------------

    //-------------------ARouter--------------
    api 'com.alibaba:arouter-api:1.5.2'
    kapt 'com.alibaba:arouter-compiler:1.5.2'

    //--------------------kotlin 协程---------------


    //--------------------jetpack LiveData 和 ViewModel ---------------


    implementation("androidx.lifecycle:lifecycle-livedata-ktx:2.2.0")
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0")

    //retrofit网络
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.google.code.gson:gson:2.8.6'


//    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'
//    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
//    implementation 'io.reactivex.rxjava2:rxjava:2.2.3'
//    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'

    //logger
    implementation 'com.orhanobut:logger:2.2.0'

    //vasDolly
    api "com.tencent.vasdolly:helper:$vasDolly_version"

    //update
    implementation "me.reezy.cosmo:update:0.7.0"
    implementation 'com.teprinciple:updateapputilsx:2.3.0'
    implementation 'com.github.MZCretin:AutoUpdateProject:2.0.5'

    // xUpdate androidx版本 https://github.com/xuexiangjys/XUpdate/wiki/%E5%A6%82%E4%BD%95%E5%BC%95%E7%94%A8
    implementation 'com.github.xuexiangjys:XUpdate:2.1.4'

    //v7
    runtimeOnly 'androidx.appcompat:appcompat:1.6.1'

    //指引 https://github.com/huburt-Hu/NewbieGuide
    api 'com.github.huburt-Hu:NewbieGuide:v2.4.0'


    //悬浮窗FloatUtil
    implementation 'com.github.liuguangli:FloatUtil:1.0'

    //splashscreen
    implementation 'androidx.core:core-splashscreen:1.0.0'
    //lottie
    implementation "com.airbnb.android:lottie:6.0.0"

    //viewpager2
    implementation "androidx.viewpager2:viewpager2:1.0.0"

    //高德地图
    implementation 'com.amap.api:3dmap:latest.integration'
    implementation 'com.amap.api:search:latest.integration'

    //图片圆形化
    implementation 'de.hdodenhof:circleimageview:3.0.1'

    //下拉刷新
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

//    FlycoTabLayout
    implementation 'io.github.h07000223:flycoTabLayout:3.0.0'
}